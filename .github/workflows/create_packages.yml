# SPDX-License-Identifier: MIT
# Copyright (C) 2021 Roland Csaszar
#
# Project:  TzolkinWaves
# File:     create_packages.yml
#
################################################################################

name: Generate Executables

on:
  release:
    types: [created]

  push:
    tags:
      - "v*.*.*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linux-exe:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup pipenv
        run: python -m pip install --upgrade pipenv

      - name: Setup MkDocs
        run: |
          cd $GITHUB_WORKSPACE
          python -m pipenv install --dev

      - name: Setup Tools
        run: |
          dotnet tool restore
          dotnet paket restore

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(.*)"

      - name: Build Package
        run: |
          cd $GITHUB_WORKSPACE
          dotnet fake run ./build.fsx target Publish
          mv ./bin/TzolkinWaves ./bin/TzolkinWaves-$GIT_TAG_NAME-linux_x64

      - name: Generate Changelog
        run: |
          cd $GITHUB_WORKSPACE/scripts
          ./get_changelog.sh > ../first_changelog.md

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ env.GIT_TAG_NAME }}
          body_path: first_changelog.md
          files: ./bin/TzolkinWaves-$GIT_TAG_NAME-linux_x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  maccos-exe:
    runs-on: macos-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup pipenv
        run: python -m pip install --upgrade pipenv

      - name: Setup MkDocs
        run: |
          cd $GITHUB_WORKSPACE
          python -m pipenv install --dev

      - name: Setup Tools
        run: |
          dotnet tool restore
          dotnet paket restore

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(.*)"

      - name: Build Package
        run: |
          cd $GITHUB_WORKSPACE
          dotnet fake run ./build.fsx target Publish
          mv ./bin/TzolkinWaves ./bin/TzolkinWaves-$GIT_TAG_NAME-OSX_x64

      - name: Generate Changelog
        run: |
          cd $GITHUB_WORKSPACE/scripts
          ./get_changelog.sh > ../first_changelog.md

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ env.GIT_TAG_NAME }}
          body_path: first_changelog.md
          files: ./bin/TzolkinWaves-$GIT_TAG_NAME-linux_x64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows-exe:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup pipenv
        shell: cmd
        run: python -m pip install --upgrade pipenv

      - name: Setup MkDocs
        shell: cmd
        run: |
          python -m pipenv install --dev

      - name: Setup Tools
        shell: cmd
        run: |
          dotnet tool restore
          dotnet paket restore

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(.*)"

      - name: Build Package
        shell: cmd
        run: |
          dotnet fake run .\build.fsx target Publish
          move .\bin\TzolkinWaves.exe .\bin\TzolkinWaves-$GIT_TAG_NAME-win_x64.exe

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ env.GIT_TAG_NAME }}
          files: .\bin\TzolkinWaves-$GIT_TAG_NAME-win_x64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
